{"version":3,"sources":["webpack:///./src/reusecore/PageHeader/pageHeader.style.js","webpack:///./src/reusecore/PageHeader/index.js","webpack:///./src/utils/slugify.js","webpack:///./src/sections/Learn/Service-Mesh-Labs/LabsWrapper.style.js","webpack:///./src/components/ScenarioCard/ScenarioCard.style.js","webpack:///./src/components/ScenarioCard/index.js","webpack:///./src/sections/Learn/Service-Mesh-Labs/index.js","webpack:///./src/pages/learn/service-mesh-labs.js","webpack:///./src/components/image.js"],"names":["PageHeaderWrapper","styled","div","authorField","author","isSlugAvailable","to","slugify","name","PageHeader","category","title","subtitle","thumbnail","useStaticQuery","allMdx","nodes","some","matter","frontmatter","className","imgStyle","objectFit","alt","key","module","exports","text","toString","toLowerCase","replace","LabsWrapper","props","theme","menuHoverColor","highlightLightColor","ScenarioCardWrapper","primaryLightColorTwo","white","Card","info","courseLink","link","cover","content","embed","subId","ID","toggleActive","React","useEffect","undefined","window","src","document","querySelector","script","createElement","setAttribute","body","appendChild","removeChild","onClick","xs","sm","style","height","width","size","id","data-katacoda-id","data-katacoda-startscenariobuttontext","data-katacoda-ctaurl","data-katacoda-color","data-katacoda-secondary","data-katacoda-background","data-katacoda-hideprogress","data-katacoda-font","data-katacoda-fontheader","minHeight","ServiceMeshLabs","selectedIndex","setSelectedIndex","useState","setContent","open","setOpen","setID","onSelect","tabIndex","data","map","scenarios","lg","ScenarioCard","Button","primary","url","ServiceMeshLabsPage","location","state","description","Navigation","Footer","Image","childImageSharp","extension","publicURL","rest","fluid"],"mappings":"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","file":"component---src-pages-learn-service-mesh-labs-js-9d02c5217e859c3dbc00.js","sourcesContent":["import styled from \"styled-components\";\n\n\nconst PageHeaderWrapper = styled.div`\n        position: relative;\n        overflow: hidden;\n        z-index:1;\n        .page-header {\n            text-align: center;\n            position: relative;\n            height: auto;\n            margin: 2rem auto 2rem;\n            padding: 0 1rem 0;\n            z-index: 99;\n        }\n        \n        .feature-image{\n            margin: 2rem auto;\n            max-height: 62.5rem;\n            max-width: 31rem;\n            object-fit: contain;    \n        }\n        .breadcrumbs {\n            display: flex;\n            justify-content: center;\n            margin-top: 1.5rem;  \n            h5 {\n                display: inline-block;\n                margin:0 0.4rem;\n                opacity: .7;\n            }\n            p{\n                margin: 0;\n                display: inline-block;\n            }\n        } \n    }\n`;\n\nexport default PageHeaderWrapper;\n","import React from \"react\";\nimport {Link, graphql, useStaticQuery} from \"gatsby\";\n\nimport slugify from \"../../utils/slugify\";\nimport PageHeaderWrapper from \"./pageHeader.style\";\nimport Image from \"../../components/image\";\n\nconst authorField = (author, isSlugAvailable) => {\n  return(\n    <>\n      {\n        isSlugAvailable ?\n          <Link to={`/community/members/${slugify(author.name)}`}>\n            <span>{author.name}</span>\n          </Link>\n          : <span>{author.name}</span>\n      }\n    </>\n  );\n};\n\nconst PageHeader = ({ category, title, subtitle,  author, thumbnail }) => {\n  let isSlugAvailable = false;\n  if(author){\n    const validMembers = useStaticQuery(\n      graphql`\n                query validMemberss{\n                    allMdx(\n                        filter:{ \n                            fields:{ collection:{eq:\"members\"} }\n                        }\n                    ) {\n                        nodes {\n                            frontmatter {\n                                name\n                            }\n                        }\n                    }\n                }\n            `\n    );\n    isSlugAvailable = validMembers.allMdx.nodes.some(matter => matter.frontmatter.name == author.name);\n  }\n  return (\n    <PageHeaderWrapper>\n      <div className=\"page-header\">\n        { thumbnail && <div className=\"feature-image\">\n          <Image {...thumbnail} imgStyle={{ objectFit: \"contain\"}} alt={title}/>\n        </div>}\n        <h1>{title}</h1>\n        {subtitle && (<h3>{subtitle}</h3>)}\n        {category && (\n          <div className=\"breadcrumbs\">\n            <span>\n              <h5>Category:</h5>\n              <p key={category}>{category}</p>\n            </span>\n            {author && (\n              <>\n                <span>\n                  <h5>By:</h5>\n                  <p>{authorField(author, isSlugAvailable)}</p>\n                </span>\n              </>\n            )}\n          </div>\n        )}\n        {!category && author && (\n          <div className=\"breadcrumbs post\">\n            <h5>By:</h5>\n            <span>{authorField(author, isSlugAvailable)}</span>\n          </div>\n        )}\n        {/*{!author && path && (*/}\n        {/*    <div className=\"breadcrumbs page\">*/}\n        {/*        <>*/}\n        {/*            <span> Home </span> <span> {\">\"} </span> {path}*/}\n        {/*        </>*/}\n        {/*    </div>*/}\n        {/*)}*/}\n      </div>\n    </PageHeaderWrapper>\n  );\n};\nexport default PageHeader;\n","module.exports = function slugify (text) {\n    return text.toString().toLowerCase()\n        .replace(/\\s+/g, \"-\")           // Replace spaces with -\n        .replace(/[^\\w\\-]+/g, \"\")       // Remove all non-word chars\n        .replace(/\\-\\-+/g, \"-\")         // Replace multiple - with single -\n        .replace(/^-+/, \"\")             // Trim - from start of text\n        .replace(/-+$/, \"\");             // Trim - from end of text\n};\n\n","import styled from \"styled-components\";\n\nexport const LabsWrapper = styled.div`\n    .join-community {\n        margin: 5rem 0rem;\n    }\n    .join-community_text-and_button {\n\t\tmargin: 0 4rem; \n        text-align: center;\n        h1{\n            margin-top: 1rem;\n        }\n        p{\n            margin: auto;\n            margin-top: 1rem;\n        }\n        button{\n            margin-top: 1.5rem;\n        }\n    }\n\t.course-tabs {\n\t\tdisplay: flex;\n\t}\n\t.course-tab-list {\n\t\tpadding: 0rem;\n\t\ttext-align: center;\n\t\tmin-width: 5.05rem;\n\t\tmax-width: 5.05rem;\n\t}\n\t.course-tab {\n\t\tpadding: 1.7rem;\n\t\ttext-align: center;\n\t\tdisplay: flex;\n\t\tmargin: auto;\n\t\tborder-bottom-right-radius: 20px;\n\t\tborder-top-right-radius: 20px;\n\t\tborder-top-left-radius: 0px;\n\t\twriting-mode: vertical-lr;\n\t\ttransform: rotate(180deg);\n\t\ttransform-origin: center center;\n\t\tlist-style-type: none;\n\t\tbackground: ${props => props.theme.menuHoverColor};\n\t\tcursor: pointer;\n\t\t\n\t\t&:hover {\n            background-color: ${props => props.theme.highlightLightColor};\n            transition: 0.05s ease-in all;\n        }\n\t}\n\t\n\t.title {\n\t\tcolor: #fff;\n\t\tfont-weight: 600;\n\t\t.menu_title {\n\t\t\tcolor: #fff;\n\t\t\tfont-weight: 600;\n\t\t}\n\t}\n\t.content.react-tabs__tab-panel--selected {\n\t\tbackground-color: black;\n\t}\n\t.react-tabs__tab--selected {\n\t\tbackground: rgb(240, 192, 55);\n\t\t-webkit-box-shadow: 2px 2px 4px 2px rgba(0,0,0,0.25);\n\t\t-moz-box-shadow: 2px 2px 4px 2px rgba(0,0,0,0.25);\n\t\tbox-shadow: 2px 2px 4px 2px rgba(0,0,0,0.25);\n\t}\n\t.row-wrapper {\n\t\tmargin-left: 0px;\n\t}\n`;\n","import styled from \"styled-components\";\n\nexport const ScenarioCardWrapper = styled.div`\n    margin: 0px;\n    .scenario-card-block {\n        margin-bottom: 2rem;\n        border: 1px solid ${props => props.theme.primaryLightColorTwo};\n        padding: 1rem;\n        cursor: pointer;\n        margin: 1rem;\n        &:hover {\n            background-color: #222;\n            transition: 0.2s ease-in all;\n        }\n        &:hover .open-close-scenario {\n            color: ${props => props.theme.primaryLightColorTwo};\n        }\n    }\n    .scenario-cover {\n        overflow: hidden;\n        border: 1px solid transparent;\n        height: 10rem;\n    }\n    .scenario-image {\n        margin: auto;\n        height: 100%;\n        width: 100%;\n    }\n    .scenario-description {\n        display: flex;\n        /* border: 3px red solid; */\n        flex-direction: column;\n        justify-content: center;\n        padding: 0rem 0;\n        color: ${props => props.theme.primaryLightColorTwo};\n        height: 100%;\n    }\n    h4.title {\n        line-height: 1.4rem;\n        color: rgb(255, 255, 255);\n        margin-bottom: 0.35rem;\n    }\n    p.info {\n        line-height: 1rem;\n        color: lightgray;\n        margin-bottom: auto;\n        font-weight: 300;\n    }\n\n\t.toggle-and-full-screen-wrapper {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n        color: ${props => props.theme.primaryLightColorTwo};\n        \n        margin-top: 1rem;\n        \n        justify-content: flex-end;\n\t\talign-self: flex-end;\n\t}\n\n\t.open-close-scenario {\n\t\tdisplay: flex;\n\t\tbackground: transparent;\n        color: white;\n\t\tborder: none;\n\t\t\n\t\tfont-size: 1rem;\n\t\tcursor: pointer;\n\t\ttransition: 0.2s ease-in all;\n\t}\n\n\t.text-contents {\n\t\tdisplay: none;\n\t}\n\n\t.active {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tpadding: 1.5rem;\n\t}\n\n    .full-screen {\n        /* text-align:right; */\n        position: relative;\n        float: right;\n        \n        /* display: flex; */\n        /* align-self: flex-end; */\n        /* right: 1rem; */\n        /* top: -1rem; */\n        a {\n            color: ${props => props.theme.white};\n            &:hover {\n                color: ${props => props.theme.primaryLightColorTwo};\n            }\n        }\n    }\n\n`;\n","import React from \"react\";\nimport { Row, Col } from \"../../reusecore/Layout\";\nimport { ScenarioCardWrapper } from \"./ScenarioCard.style\";\nimport { BsArrowDown } from \"react-icons/bs\";\nimport { BsArrowUp } from \"react-icons/bs\";\nimport { Link } from \"gatsby\";\nimport { FaExternalLinkAlt } from \"react-icons/fa\";\n\nconst Card = ({ title, info, courseLink, link, cover, content, embed, subId, ID, toggleActive }) => {\n\n  const isScriptLoaded = (src) => {\n    return document.querySelector(\"script[src=\\\"\" + src + \"\\\"]\") ? true : false;\n  };\n\n  React.useEffect(() => {\n    if (typeof window !== undefined && !isScriptLoaded(\"//katacoda.com/embed.js\")) {\n      const script = document.createElement(\"script\");\n      script.setAttribute(\"src\", \"//katacoda.com/embed.js\");\n      document.body.appendChild(script);\n      return () => {\n        document.body.removeChild(script);\n      };\n    }\n  }, []);\n\n  return (\n    <ScenarioCardWrapper>\n      <div className=\"scenario-card-block\" onClick={() => toggleActive(subId)}>\n        <Row>\n          <Col xs={12} sm={12}>\n            <div className=\"full-screen\">\n              <Link to={link} className=\"siteLink\"><FaExternalLinkAlt style={{ height: \"1.5rem\", width: \"auto\" }} /></Link>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={4}>\n            <div className=\"scenario-cover\">\n              <img src={cover} className=\"scenario-image\" />\n            </div>\n          </Col>\n          <Col xs={12} sm={8}>\n            <div className=\"scenario-description\">\n\n              <h4 className=\"title\">{title}</h4>\n              <p className=\"info\">{info}</p>\n\n              <div className=\"toggle-and-full-screen-wrapper\">\n                {content && ID === subId ?\n                  <div className=\"open-close-scenario\"> Close Scenario <BsArrowUp className=\"icon\" size={30} /></div> :\n                  <div className=\"open-close-scenario\"> Open Scenario <BsArrowDown className=\"icon\" size={30} /></div>\n                }\n              </div>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <div className={content && subId === ID ? \"active\" : \"text-contents\"}>\n              <div className=\"sub-content\">\n                <div id=\"katacoda-scenario\"\n                  data-katacoda-id={`${courseLink}/${embed}`}\n                  data-katacoda-startscenariobuttontext=\"Start Scenario\"\n                  data-katacoda-ctaurl=\"https://layer5.io/\"\n                  data-katacoda-color=\"#3C494F\"\n                  data-katacoda-secondary=\"#00b39f\"\n                  data-katacoda-background=\"#fff\"\n                  data-katacoda-hideprogress=\"true\"\n                  data-katacoda-font=\"Open Sans\"\n                  data-katacoda-fontheader=\"Open Sans\" style={{ minHeight: \"37rem\" }}>\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </ScenarioCardWrapper>\n  );\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport { LabsWrapper } from \"./LabsWrapper.style\";\nimport PageHeader from \"../../../reusecore/PageHeader\";\nimport ScenarioCard from \"../../../components/ScenarioCard\";\nimport { Container, Row, Col } from \"../../../reusecore/Layout\";\nimport Button from \"../../../reusecore/Button\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport { data } from \"./courseData\";\n\n\nconst ServiceMeshLabs = ({selectedIndex, setSelectedIndex}) => {\n\n  const [content, setContent] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [ID, setID] = useState(\"\");\n\n  const toggleActive = (subId) => {\n    if (open) {\n      if (ID === subId) {\n        setOpen(false);\n        setContent(false);\n        setID(\"\");\n      } else {\n        setOpen(false);\n        setContent(false);\n        setID(subId);\n        setContent(true);\n        setOpen(true);\n      }\n    } else {\n      setID(subId);\n      setContent(true);\n      setOpen(true);\n    }\n  };\n\n  return (\n    <LabsWrapper>\n      <PageHeader title=\"Learn how to service mesh\" subtitle=\"with interactive labs\" />\n      <div className=\"Labs-section-wrapper\">\n        <Container>\n          <Tabs className=\"course-tabs\"\n            selectedIndex={selectedIndex}\n            onSelect={tabIndex => setSelectedIndex(tabIndex)}\n          >\n            <TabList className=\"course-tab-list\">\n              {data.map(({ id, title }) => (\n                <Tab className=\"course-tab\" key={id}>\n                  <div className=\"title\">\n                    <h5 className=\"menu_title\">{title}</h5>\n                  </div>\n                </Tab>\n              ))}\n            </TabList>\n            {data.map(({ id, courseLink, scenarios }) => (\n              <TabPanel className=\"content\" key={id}>\n                <Row className=\"row-wrapper\">\n                  {scenarios.map(({ subId, title, cover, info, embed, link }) => (\n                    <Col {...content && ID === subId ? { xs: 12, sm: 12, lg: 12 } : { xs: 12, sm: 6 }} key={subId}>\n                      <ScenarioCard\n                        title={title}\n                        info={info}\n                        cover={cover}\n                        content={content}\n                        embed={embed}\n                        courseLink={courseLink}\n                        link={link}\n                        subId={subId}\n                        ID={ID}\n                        toggleActive={(subId) => {\n                          toggleActive(subId);\n                        }}\n                      />\n                    </Col>\n                  ))}\n                </Row>\n              </TabPanel>\n            ))}\n          </Tabs>\n        </Container>\n        <div className=\"join-community\">\n          <div className=\"join-community_text-and_button\">\n            <h1>Don't Learn Alone</h1>\n            <p>Join other learners and cloud native engineers in the Layer5 community. Join us on Slack and learn with us.</p>\n            <Button primary title=\"Join Our Community\" url=\"http://slack.layer5.io/\" />\n          </div>\n        </div>\n      </div>\n    </LabsWrapper>\n  );\n};\n\nexport default ServiceMeshLabs;\n","import React, {useEffect, useState} from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport Layout from \"../../components/layout\";\nimport SEO from \"../../components/seo\";\n\nimport Navigation from \"../../sections/General/Navigation\";\nimport Footer from \"../../sections/General/Footer\";\nimport ServiceMeshLabs from \"../../sections/Learn/Service-Mesh-Labs\";\n\nimport { GlobalStyle } from \"../../sections/app.style\";\nimport theme from \"../../theme/app/themeStyles\";\n\n\nconst ServiceMeshLabsPage = (props) => {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  useEffect(() => {\n    if (props.location.state && props.location.state.selectedIndex){\n      setSelectedIndex(props.location.state.selectedIndex);\n    }\n  },[]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Layout>\n        <GlobalStyle />\n        <SEO title=\"Interactive Service Mesh Labs\" description=\"Learn to service mesh with the industry leaders.Try interactive service mesh lab scenarios.\" />\n        <Navigation />\n        <ServiceMeshLabs selectedIndex={selectedIndex} setSelectedIndex={setSelectedIndex} />\n        <Footer />\n      </Layout>\n    </ThemeProvider>\n  );\n};\nexport default ServiceMeshLabsPage;\n","import React from \"react\";\nimport Img from \"gatsby-image\";\n\n\nconst Image = ({ childImageSharp, extension, publicURL, alt, ...rest }) => {\n  if (!childImageSharp && extension === \"svg\") {\n    return (\n      <div className=\"gatsby-image-wrapper\">\n        <img src={publicURL} alt={alt} />\n      </div>\n    );\n  }\n  return <Img fluid={childImageSharp.fluid}  {...rest} alt={alt} />;\n};\n\nexport default Image;\n"],"sourceRoot":""}