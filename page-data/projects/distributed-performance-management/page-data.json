{"componentChunkName":"component---src-templates-project-single-js","path":"/projects/distributed-performance-management","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Distributed Performance Management\",\n  \"thumbnail\": \"./distributed-performance_green.svg\",\n  \"published\": true,\n  \"redirect_from\": [\"/distributed-performance\", \"/projects/distributed-performance\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ProjectWrapper, {\n    mdxType: \"ProjectWrapper\"\n  }, mdx(Row, {\n    mdxType: \"Row\"\n  }, mdx(Col, {\n    mdxType: \"Col\"\n  }, mdx(\"div\", null, mdx(\"img\", {\n    src: smdp1,\n    align: \"left\",\n    alt: \"smdp1\",\n    className: \"smdp-top-left\"\n  }), mdx(\"h3\", null, \"Purpose and Overview\"), mdx(\"p\", null, \"Distributed load testing offers insight into system behaviors that arguably more accurately represent real world behaviors of services under load as that load comes from any number of sources.\"), mdx(\"h4\", null, \"Project Aim\"), \"The main aim of this project is to enhance the current load generation and analysis technique of Nighthawk to include distributed load testing which may ultimately benefit the meshery to directly adopt the distributed load generation.\", mdx(\"br\", null), mdx(\"br\", null), mdx(\"h4\", null, \"Project Goals\")))), mdx(\"ul\", null, mdx(\"li\", null, \"Identifying the use-cases of Nighthawk. Working with the nighthawk team to successfully enable distributed load generation in nighthawk..\"), mdx(\"li\", null, \"Integrating the Nighthawk into the Meshery server and improving the load handling for Nighthawk using the same.\"), mdx(\"li\", null, \"Handling of the report and displaying mechanisms at the client-side.\"), mdx(\"li\", null, \"Testing & Debugging the Load Generator & finishing the implementation on Nighthawk.\")), mdx(\"h4\", null, \"Need for the Project\"), mdx(\"img\", {\n    src: smdp2,\n    align: \"right\",\n    className: \"smdp-bottom-right\",\n    alt: \"smdp2\"\n  }), \"Currently, Meshery which is a multi-service mesh management plane which can operate & adapt to various different service meshes only supports a single way load testing. Understanding the need to support a variety of performance testing scenarios, Meshery has been equipped with a load generator interface as a point of extensibility to support the use of different load generators (see \", mdx(\"a\", {\n    href: \"https://docs.meshery.io/extensibility\"\n  }, \"Meshery Extensibility\"), \" documentation). Meshery Load Generation currently has been equipped with support for both wrk2 and fortio, neither of which support distributed load testing.\", mdx(\"h4\", null, \"Why NightHawk\"), mdx(\"p\", null, \"Nighthawk is a versatile HTTP load testing tool built out of a need to drill HTTP services with a constant request rate. It can be used both as a command-line utility and a library.\"), mdx(\"h4\", null, \"Contributors\"), mdx(\"p\", null, \"This project is being developed by Kush Trivedi as a Google Summer of Code project with the CNCF and in collaboration with Layer5 and Google.\"), mdx(\"strong\", null, mdx(\"a\", {\n    href: \"https://docs.google.com/document/d/1_hhQ5w1iLClgf7RvboI6il-eMKKAVPwz50GHm2VN4Bg/edit#\"\n  }, \"Here\"), \" is the design document which is under review for invoking distributed load generation & performance benchmarking using nighthawk.\"), mdx(\"h3\", {\n    className: \"bottom-tag\"\n  }, \"Jump into the \", mdx(\"a\", {\n    href: \"http://slack.layer5.io\"\n  }, \"#performance channel\"), \" to learn more about this initative.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Distributed Performance Management","subtitle":null,"thumbnail":{"childImageSharp":null,"extension":"svg","publicURL":"/static/93e0f6228e3f7c7d053b58f3bfdc7550/distributed-performance_green.svg"}}}},"pageContext":{"slug":"/projects/distributed-performance-management"}},"staticQueryHashes":["1485533831","3298844718","764694655","764694655"]}